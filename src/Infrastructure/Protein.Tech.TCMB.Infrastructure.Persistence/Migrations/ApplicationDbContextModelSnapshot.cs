// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Protein.Tech.TCMB.Infrastructure.Persistence.Context;

namespace Protein.Tech.TCMB.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Protein.Tech.TCMB.Core.Domain.Entities.Currency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9eefed9-ead1-47e9-b045-a3357be50128"),
                            Code = "USD",
                            CreateDate = new DateTime(2022, 8, 27, 19, 52, 56, 163, DateTimeKind.Local).AddTicks(6348)
                        },
                        new
                        {
                            Id = new Guid("44223ea3-1955-4e38-bbe5-4c918f643255"),
                            Code = "EUR",
                            CreateDate = new DateTime(2022, 8, 27, 19, 52, 56, 165, DateTimeKind.Local).AddTicks(316)
                        },
                        new
                        {
                            Id = new Guid("75d1a8c3-a054-4a1a-857e-aef623ba8644"),
                            Code = "GBP",
                            CreateDate = new DateTime(2022, 8, 27, 19, 52, 56, 165, DateTimeKind.Local).AddTicks(349)
                        },
                        new
                        {
                            Id = new Guid("2a16f857-5b8a-445c-9013-705553367267"),
                            Code = "CHF",
                            CreateDate = new DateTime(2022, 8, 27, 19, 52, 56, 165, DateTimeKind.Local).AddTicks(355)
                        },
                        new
                        {
                            Id = new Guid("e55ff64e-558c-4b79-85c8-1ebdded0806f"),
                            Code = "KWD",
                            CreateDate = new DateTime(2022, 8, 27, 19, 52, 56, 165, DateTimeKind.Local).AddTicks(360)
                        },
                        new
                        {
                            Id = new Guid("632ee9f7-3633-4333-95a7-36fd395758d7"),
                            Code = "SAR",
                            CreateDate = new DateTime(2022, 8, 27, 19, 52, 56, 165, DateTimeKind.Local).AddTicks(365)
                        },
                        new
                        {
                            Id = new Guid("116251bf-8993-45cc-9ab8-91e6a28340b6"),
                            Code = "RUB",
                            CreateDate = new DateTime(2022, 8, 27, 19, 52, 56, 165, DateTimeKind.Local).AddTicks(392)
                        });
                });

            modelBuilder.Entity("Protein.Tech.TCMB.Core.Domain.Entities.CurrencyRate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Changes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CurrencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("Protein.Tech.TCMB.Core.Domain.Entities.CurrencyRate", b =>
                {
                    b.HasOne("Protein.Tech.TCMB.Core.Domain.Entities.Currency", "Currency")
                        .WithMany("Rates")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Protein.Tech.TCMB.Core.Domain.Entities.Currency", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
